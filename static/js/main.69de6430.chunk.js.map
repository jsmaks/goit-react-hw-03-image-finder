{"version":3,"sources":["Components/Modal/Modal.jsx","Components/Button/Button.jsx","Components/Container/Container.jsx","Components/Searchbar/SearchBar.jsx","api/apiService.js","Components/ImageGallery/ImageGallery.jsx","Components/ImageGallery/ImageGalleryItem.jsx","App.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","onClick","children","Component","Button","type","Container","Searchbar","state","query","handleSubmit","preventDefault","onSubmit","handleChange","name","value","setState","reset","autoComplete","autoFocus","placeholder","onChange","API_KEY","BASE_URL","searchQuery","currentPage","url","axios","get","ImageGallery","onImgClick","ImageGalleryItem","images","map","el","src","webformatURL","alt","data-source","largeImageURL","id","App","showModal","isLoading","error","selectedImg","toggleModal","source","dataset","onChangeQuery","fetchHits","imgOption","ImagesFinderApiService","then","data","prevState","hits","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreBtn","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69de6430.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","const Button = ({ onClick }) => {\r\n  return (\r\n    <div className=\"container__load-more\">\r\n      <button type=\"button\" onClick={onClick} className=\"Button\">\r\n        LoadMore\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import './Container.css'\r\nconst Container = ({children}) => {\r\n    return (\r\n        <div className=\"container\">{children}</div>\r\n      );\r\n}\r\n \r\nexport default Container;","import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { query } = this.state;\r\n    this.props.onSubmit(query);\r\n  };\r\n  \r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '' });\r\n  };\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            name=\"query\"\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst options = {\r\n  API_KEY: '20689787-83a4953ee3875a5823ca1478f',\r\n  BASE_URL: 'https://pixabay.com/api/',\r\n};\r\n\r\nconst { API_KEY, BASE_URL } = options;\r\n\r\nconst fetchImages = ({searchQuery = '', currentPage = 1}) => {\r\n  const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`;\r\n  return axios.get(url);\r\n};\r\nexport default {fetchImages};\r\n\r\n","const ImageGallery = ({onImgClick, children}) => {\r\n  \r\n  return (\r\n    <div className=\"image__container\">\r\n      <ul onClick={onImgClick} className=\"ImageGallery\">{children}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","const ImageGalleryItem = ({ images }) => {\r\n  return images.map(el => (\r\n    <li key={el.id} className=\"ImageGalleryItem\">\r\n      <img\r\n        src={el.webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        data-source={el.largeImageURL}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import Modal from './Components/Modal/Modal';\nimport React, { Component } from 'react';\n\nimport Button from './Components/Button/Button';\nimport Container from './Components/Container/Container';\nimport Searchbar from './Components/Searchbar/SearchBar';\nimport ImagesFinderApiService from './api/apiService';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './Components/ImageGallery/ImageGalleryItem';\nimport Loader from 'react-loader-spinner';\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    selectedImg: '',\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  onImgClick = event => {\n    const { source } = event.target.dataset;\n    this.setState({ selectedImg: source });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits();\n    }\n    if (prevState.selectedImg !== this.state.selectedImg) {\n      this.toggleModal();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchHits = () => {\n    const { currentPage, searchQuery } = this.state;\n    const imgOption = {\n      currentPage,\n      searchQuery,\n    };\n    this.setState({ isLoading: true });\n\n    ImagesFinderApiService.fetchImages(imgOption)\n      .then(({ data }) => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n  render() {\n    const { showModal, images, isLoading, error, selectedImg } = this.state;\n    const imagesLength = images.length;\n    const shouldRenderLoadMoreBtn = imagesLength > 0 && !isLoading;\n\n    return (\n      <Container>\n        {error && <h1>Ошибка</h1>}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery onImgClick={this.onImgClick}>\n          <ImageGalleryItem images={images} />\n        </ImageGallery>\n        {isLoading && <Loader />}\n        {shouldRenderLoadMoreBtn && <Button onClick={this.fetchHits} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={selectedImg} alt=\"\" />\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}